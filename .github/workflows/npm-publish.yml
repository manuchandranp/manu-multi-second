name: Publish NPM Package to JFrog

on:
  workflow_call:
    inputs:
      jfrog-npm-repository:
        required: true
        type: string
      jfrog-url:
        required: true
        type: string
      node-version:
        required: true
        type: string
      package-json-file-path:
        required: true
        type: string
      download-artifact:
        required: false
        type: boolean
      artifact-name:
        required: false
        type: string
      build-name:
        required: false
        type: string
      build-number:
        required: false
        type: string
    secrets:
      JFROG_ACCESS_TOKEN:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: (Optional) Download build artifact from earlier job
        if: ${{ inputs.download-artifact == true }}
        uses: actions/download-artifact@v5
        with:
          name: ${{ inputs.artifact-name }}
          path: .

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ inputs['node-version'] }}

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:  
           JF_URL: ${{ vars.JF_URL }}
           JFROG_ACCESS_TOKEN : ${{ secrets.JFROG_ACCESS_TOKEN }}
             jf --version

      - name: Configure JFrog CLI server
        env:
          JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          JFROG_URL="${{ inputs['jfrog-url'] }}"

          # Ensure consistent base URL
          if [[ "$JFROG_URL" == *"/artifactory"* ]]; then
            ARTIFACTORY_BASE_URL="$JFROG_URL"
          else
            ARTIFACTORY_BASE_URL="${JFROG_URL}/artifactory"
          fi

          echo "Configuring JFrog CLI for URL: $ARTIFACTORY_BASE_URL"

          # Correct: no trailing space after token
          jf config add artifactory-server \
            --url="$ARTIFACTORY_BASE_URL" \
            --access-token="${JFROG_ACCESS_TOKEN}" \
            --interactive=false

          echo "✅ JFrog CLI configured successfully."


      - name: Configure npm auth for JFrog (jfrog rt npm-config)
        run: |
          REPO="${{ inputs['jfrog-npm-repository'] }}"
          jf npm-config --repo-deploy "$REPO" --repo-resolve "$REPO" --server-id-deploy=artifactory-server --server-id-resolve=artifactory-server
          echo "npm configured to use Artifactory npm repo: $REPO"

      - name: Prepare package location
        id: pkg
        run: |
          PACKAGE_JSON_PATH="${{ inputs['package-json-file-path'] }}"
          PACKAGE_DIR="$(dirname "$PACKAGE_JSON_PATH")"
          if [ "$PACKAGE_DIR" = "." ]; then
            echo "package_dir=." >> $GITHUB_OUTPUT
          else
            echo "package_dir=$PACKAGE_DIR" >> $GITHUB_OUTPUT
          fi

      - name: Show configured npm registry (safe debug)
        run: |
          echo "NPM registry configured in ~/.npmrc (showing registry lines only):"
          grep -E 'registry|always-auth' ~/.npmrc || true

      - name: Install deps and publish package to Artifactory
        env:
          JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
        run: |
          set -euo pipefail

          # Compose registry URL
          JFROG_URL="${{ inputs['jfrog-url'] }}"
          if [[ "$JFROG_URL" == *"/artifactory"* ]]; then
            BASE_URL="$JFROG_URL"
          else
            BASE_URL="${JFROG_URL}/artifactory"
          fi

          REGISTRY_URL="$BASE_URL/api/npm/${{ inputs['jfrog-npm-repository'] }}"
          echo "Publishing to npm registry: $REGISTRY_URL"

          # Move to the package directory
          cd "${{ steps.pkg.outputs.package_dir }}"
          echo "Current working directory: $(pwd)"
          ls -la

          # Install dependencies using JFrog CLI wrapper
          if [ -f package-lock.json ]; then
            jf npm ci
          else
            jf npm install
          fi

          # Optional: Create npm package tarball for verification
          npm pack

          # Configure build context for jfrog CLI
          jf rt bce "${{ inputs['build-name'] }}" "${{ inputs['build-number'] }}"

          # Publish using Artifactory repository and build context
          jf npm publish \
            --registry "$REGISTRY_URL" \
            --build-name "${{ inputs['build-name'] }}" \
            --build-number "${{ inputs['build-number'] }}" \
            --server-id-deploy=artifactory-server

          # Collect environment and publish build info
          jf rt build-collect-env "${{ inputs['build-name'] }}" "${{ inputs['build-number'] }}"
          jf rt bp "${{ inputs['build-name'] }}" "${{ inputs['build-number'] }}" --server-id=artifactory-server --access-token=$JFROG_ACCESS_TOKEN

          echo "✅ npm package successfully published to JFrog Artifactory!"
